// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import entity "github.com/rahman-teja/quiz-master/internal/entity"
import mock "github.com/stretchr/testify/mock"

// AnswersQueryUsecase is an autogenerated mock type for the AnswersQueryUsecase type
type AnswersQueryUsecase struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx
func (_m *AnswersQueryUsecase) Get(ctx context.Context) ([]entity.Answers, interface{}, error) {
	ret := _m.Called(ctx)

	var r0 []entity.Answers
	if rf, ok := ret.Get(0).(func(context.Context) []entity.Answers); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Answers)
		}
	}

	var r1 interface{}
	if rf, ok := ret.Get(1).(func(context.Context) interface{}); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(interface{})
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context) error); ok {
		r2 = rf(ctx)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
